defmodule MessageTest do
  @moduledoc false
  use ExUnit.Case
  doctest QRCode.Message

  alias QRCode.{QR, Message}
  alias QRCode.ErrorCorrection, as: ECC

  test "should generate the right message" do
    qr = %QR{
      ecc_level: :quartile,
      version: 5,
      ecc: %ECC{
        ec_codewrods_per_block: 18,
        blocks_in_group1: 2,
        codewords_per_block_in_group1: 15,
        blocks_in_group2: 2,
        codewords_per_block_in_group2: 16,
        groups: {
          [
            [67, 85, 70, 134, 87, 38, 85, 194, 119, 50, 6, 18, 6, 103, 38],
            [246, 246, 66, 7, 118, 134, 242, 7, 38, 86, 22, 198, 199, 146, 6]
          ],
          [
            [182, 230, 247, 119, 50, 7, 118, 134, 87, 38, 82, 6, 134, 151, 50, 7],
            [70, 247, 118, 86, 194, 6, 151, 50, 16, 236, 17, 236, 17, 236, 17, 236]
          ]
        },
        codewords: {
          [
            [
              213,
              199,
              11,
              45,
              115,
              247,
              241,
              223,
              229,
              248,
              154,
              117,
              154,
              111,
              86,
              161,
              111,
              39
            ],
            [87, 204, 96, 60, 202, 182, 124, 157, 200, 134, 27, 129, 209, 17, 163, 163, 120, 133]
          ],
          [
            [
              148,
              116,
              177,
              212,
              76,
              133,
              75,
              242,
              238,
              76,
              195,
              230,
              189,
              10,
              108,
              240,
              192,
              141
            ],
            [235, 159, 5, 173, 24, 147, 59, 33, 106, 40, 255, 172, 82, 2, 131, 32, 178, 236]
          ]
        }
      }
    }

    expected =
      <<0bsize(
          1079
        )>>

    %QR{message: msg} = Message.put(qr)

    assert msg == expected
  end
end
